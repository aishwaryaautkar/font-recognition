{"version":3,"sources":["App.js","index.js"],"names":["App","isLoading","setIsLoading","React","useState","image","setImage","text","setText","progress","setProgress","_jsx","className","children","style","height","_jsxs","_Fragment","value","max","type","onChange","e","URL","createObjectURL","target","files","onClick","handleSubmit","Tesseract","recognize","logger","m","console","log","status","parseInt","catch","err","error","then","result","data","rows","ReactDOM","render","document","getElementById"],"mappings":"gMAiFeA,MA5EHA,KACV,MAAOC,EAAWC,GAAgBC,IAAMC,UAAS,IAC1CC,EAAOC,GAAYH,IAAMC,SAAS,KAClCG,EAAMC,GAAWL,IAAMC,SAAS,KAChCK,EAAUC,GAAeP,IAAMC,SAAS,GAsB/C,OACEO,cAAA,OAAKC,UAAU,OAAMC,SACrBF,cAAA,OAAKC,UAAU,YAAYE,MAAO,CAAEC,OAAQ,SAAUF,SACpDF,cAAA,OAAKC,UAAU,YAAWC,SACxBG,eAAA,OAAKJ,UAAU,mEAAkEC,SAAA,EAC7EZ,GACAU,cAAA,MAAIC,UAAU,wBAAuBC,SAAC,qBAEvCZ,GACCe,eAAAC,WAAA,CAAAJ,SAAA,CACEG,eAAA,YAAUJ,UAAU,eAAeM,MAAOT,EAAUU,IAAI,MAAKN,SAAA,CAC1DJ,EAAS,IAAE,OACF,IACZO,eAAA,KAAGJ,UAAU,wBAAuBC,SAAA,CAAC,iBAAeJ,EAAS,YAG/DR,IAAcM,GACdS,eAAAC,WAAA,CAAAJ,SAAA,CACEF,cAAA,SACES,KAAK,OACLC,SAAWC,GACThB,EAASiB,IAAIC,gBAAgBF,EAAEG,OAAOC,MAAM,KAE9Cd,UAAU,2BAEZD,cAAA,SACES,KAAK,SACLO,QA/COC,KACnB1B,GAAa,GACb2B,IAAUC,UAAUzB,EAAO,MAAO,CAChC0B,OAASC,IACPC,QAAQC,IAAIF,GACK,qBAAbA,EAAEG,QACJzB,EAAY0B,SAAsB,IAAbJ,EAAEvB,cAI1B4B,OAAOC,IACNL,QAAQM,MAAMD,MAEfE,MAAMC,IACLR,QAAQC,IAAIO,EAAOC,MACnBlC,EAAQiC,EAAOC,KAAKnC,MACpBL,GAAa,OAgCLU,UAAU,uBACVM,MAAM,gBAIVjB,GAAaM,GACbI,cAAAM,WAAA,CAAAJ,SACEF,cAAA,YACEC,UAAU,0BACV+B,KAAK,KACLzB,MAAOX,EACPc,SAAWC,GAAMd,EAAQc,EAAEG,OAAOP,qB,MChElD0B,IAASC,OAAOlC,cAACX,EAAG,IAAK8C,SAASC,eAAe,W","file":"static/js/main.706a5643.chunk.js","sourcesContent":["import React from 'react';\nimport Tesseract from 'tesseract.js';\n\nimport './style.css';\n\nconst App = () => {\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [image, setImage] = React.useState('');\n  const [text, setText] = React.useState('');\n  const [progress, setProgress] = React.useState(0);\n\n  const handleSubmit = () => {\n    setIsLoading(true);\n    Tesseract.recognize(image, 'eng', {\n      logger: (m) => {\n        console.log(m);\n        if (m.status === 'recognizing text') {\n          setProgress(parseInt(m.progress * 100));\n        }\n      },\n    })\n      .catch((err) => {\n        console.error(err);\n      })\n      .then((result) => {\n        console.log(result.data);\n        setText(result.data.text);\n        setIsLoading(false);\n      });\n  };\n\n  return (\n    <div className='cont'>\n    <div className=\"container\" style={{ height: '100vh' }}>\n      <div className=\"row h-100\">\n        <div className=\"col-md-5 mx-auto h-100 d-flex flex-column justify-content-center\">\n          {!isLoading && (\n            <h1 className=\"text-center py-5 mc-5\">FONT RECOGNITION</h1>\n          )}\n          {isLoading && (\n            <>\n              <progress className=\"form-control\" value={progress} max=\"100\">\n                {progress}%{' '}\n              </progress>{' '}\n              <p className=\"text-center py-0 my-0\">RECOGNISING:- {progress} %</p>\n            </>\n          )}\n          {!isLoading && !text && (\n            <>\n              <input\n                type=\"file\"\n                onChange={(e) =>\n                  setImage(URL.createObjectURL(e.target.files[0]))\n                }\n                className=\"form-control mt-5 mb-2\"\n              />\n              <input\n                type=\"button\"\n                onClick={handleSubmit}\n                className=\"btn btn-primary mt-5\"\n                value=\"Convert\"\n              />\n            </>\n          )}\n          {!isLoading && text && (\n            <>\n              <textarea\n                className=\"form-control w-100 mt-5\"\n                rows=\"30\"\n                value={text}\n                onChange={(e) => setText(e.target.value)}\n              ></textarea>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport 'mdb-react-ui-kit/dist/css/mdb.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}